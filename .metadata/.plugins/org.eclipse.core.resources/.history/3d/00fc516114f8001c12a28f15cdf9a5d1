import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import java.io.File;

/**
 * Servlet implementation class Inscription
 */

@WebServlet(urlPatterns = {"/CreerUnSport"})
public class CreerSport extends HttpServlet {
	private static final long serialVersionUID = 1L;

	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		response.setContentType("text/html");
		PrintWriter out = response.getWriter();
		
		String nomSport = request.getParameter("nomSport");
		
		
		String xmlFileName = "C:/Users/berti/Documents/Master/RT0805_Prog_repartie/Repo/Tracker/sport.xml";
//		String xmlFileName = "sport.xml";
		Date dateT = new Date();
		
		File xmlFile = new File(xmlFileName);
		
		if(!xmlFile.exists()){
			try {
		         DocumentBuilderFactory dbFactory =
		         DocumentBuilderFactory.newInstance();
		         DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		         Document doc = dBuilder.newDocument();
		         
		         // root element
		         Element rootElement = doc.createElement("Tracker");
		         doc.appendChild(rootElement);
	
		         // User element
		         Element nom = doc.createElement(nomSport);
		         rootElement.appendChild(nom);
		         
		         Element enregistrement = doc.createElement("Enregistrement");
		         nom.appendChild(enregistrement);
		         
		         Element date = doc.createElement("Date");
		         date.appendChild(doc.createTextNode(dateT.toString()));
		         enregistrement.appendChild(date);
	
		         // write the content into xml file
		         TransformerFactory transformerFactory = TransformerFactory.newInstance();
		         Transformer transformer = transformerFactory.newTransformer();
		         DOMSource source = new DOMSource(doc);
		         StreamResult result = new StreamResult(new File(xmlFileName));
		         transformer.transform(source, result);
		         
		         // Output to console for testing
		         
		         StreamResult consoleResult = new StreamResult(System.out);
		         transformer.transform(source, consoleResult);
		      } catch (Exception e) {
		         e.printStackTrace();
		      }
			}
		else {
			try {
			   DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
		       DocumentBuilder db = dbf.newDocumentBuilder();
		       Document doc = db.parse(xmlFileName);
		       // Récupérer l'élément racine
		       Element rootElement = (Element) doc.getFirstChild();
		       
		       Element nom = doc.createElement(nomSport);
		       rootElement.appendChild(nom);
	
		       Element enregistrement = doc.createElement("Enregistrement");
		       nom.appendChild(enregistrement);
		         
		       Element date = doc.createElement("Date");
		       date.appendChild(doc.createTextNode(dateT.toString()));
		       enregistrement.appendChild(date);
		       
		       Element pointGPS = doc.createElement("location_list");
		       enregistrement.appendChild(pointGPS);
		       
		       Element location_list = doc.createElement("location_list");
		       enregistrement.appendChild(location_list);
		       
		       Element pointgps = doc.createElement("gps_coord");
		       pointgps.appendChild(doc.createTextNode("REIMS"));
		       pointGPS.appendChild(pointgps);
		       
		       // écrire le contenu dans un fichier xml
		       TransformerFactory tf = TransformerFactory.newInstance();
		       Transformer transformer = tf.newTransformer();
		       DOMSource src = new DOMSource(doc);
		       StreamResult res = new StreamResult(new File(xmlFileName));
		       transformer.transform(src, res);
		       
		       response.sendRedirect(request.getContextPath() + "/Traque.jsp");
		     } catch (Exception e) {
		      e.printStackTrace();
		     }
			}
		}
}